{{>adminheader loginuser=loginuser}}


{{>adminsidebaar loginuser=loginuser}}
       <div class="main-panel">
        <div class="content-wrapper">
             
        <div class="content-wrapper">

            <div class="row">
            <div class="col-md-6 grid-margin stretch-card">
              <div class="card tale-bg">
                <div class="card-people mt-auto">
                   <div class="card-body">
                  <p class="card-title">Doctor Info</p>
                      <div class="row">
                        <div class="col-md-12">
                            <div class="profile-view">
                              {{#each dacdata}}
                                <div class="profile-img-wrap"  style="max-height: 100px;">
                                    <div class="profile-img"  style="max-height: 100px;">
                                        <a href="#"><img class="avatar" src="{{this.image}}" alt=""  style="max-height: 100px;"></a>
                                    </div>
                                </div>
                                <div class="profile-basic">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <div class="profile-info-left">
                                                <h3 class="user-name m-t-0 mb-0">{{this.fullname}} {{this.lastfullname}}</h3>
                                                <small class="text-muted">{{this.email}}</small>
                                                <div class="staff-id">Doctor ID : {{this._id}}</div>
                                               
                                            </div>
                                        </div>
                                        <div class="col-md-7">
                                            <ul class="personal-info">
                                                <li>
                                                    <span class="title">Phone:</span>
                                                    <span class="text"><a href="#">{{this.phone}}</a></span>
                                                </li>
                                                <li>
                                                    <span class="title">Email:</span>
                                                    <span class="text"><a href="#">{{this.email}}</a></span>
                                                </li>
                                               
                                               
                                                
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                {{/each}}
                            </div>                        
                        </div>
                    </div>
                </div>
                  <div class="weather-info">
                  </div>
                </div>
              </div>
            </div>
             <div class="col-md-6 grid-margin transparent">
              <div class="row">
                <div class="col-md-12 mb-12 stretch-card transparent">
                  <div class="card card-tale">
                    <a class="nav-link" href="../patients">
                    <div class="card-body">
                      <p class="mb-4" style="color: white;">Patients under doctor</p>
                      <p class="fs-30 mb-2" style="color: white;">{{userData.length}}</p>
                      <p style="color: white;">30 days</p>
                    </div>
                    </a>
                  </div>
                </div>
                </div>
                </div>
            </div>


            
                <br><br>


                <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <p class="card-title">Doctor Patient Graph</p>
                  <p class="font-weight-500">The total number of Patient Added by Doctor</p>
                  <div class="d-flex flex-wrap mb-5"> 
                  </div>
                <canvas id="myChartp" style="width:100%; max-height:400px"></canvas>
                 
                 <select onclick="timeFramep('month')" id='date-dropdownp'></select>

                 <button onClick="timeFramep('day')" >Month</button>
                <input onchange="filterDatap()" type="date" id="startdatep" value="">
               <input onchange="filterDatap()" type="date" id="enddatep" value=""> 
                </div>
              </div>
            </div>



            {{!-- <div class="col-md-6 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <p class="card-title">Patient Graph</p>
                  <p class="font-weight-500">The total number of Patients Added by Doctors</p>
                  <div class="d-flex flex-wrap mb-5"> 
                  </div>
                 <canvas id="myChartp" style="width:100%; max-height:400px"></canvas>
                 
                 <select onclick="timeFramep('month')" id='date-dropdownp'></select>

                 <button onClick="timeFramep('day')" >Month</button>
                <input onchange="filterDatap()" type="date" id="startdatep" value="">
               <input onchange="filterDatap()" type="date" id="enddatep" value=""> 
                </div>
              </div>
            </div> --}}
            
            </div>
                


        
                <!-- <h3>{{graphData}}</h3> -->
                <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
              <script myvar={{graphData}}>
              var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var temp = document.currentScript.getAttribute('myvar'); 
          var arr2 = temp.split(","); // spliting from iso date to normal date
         var datapoints=[];
          var curr=1;
         for(var i=1;i<arr2.length;i++){ //counting occurance of each element
            if(arr2[i-1]===arr2[i]){
              ++curr;
            }else{
              datapoints.push(curr);
              curr=1;
            }
         }
          datapoints.push(curr);
          arr2=unique(arr2);
          var day=[];
          for(var i=0;i<arr2.length;i++){
             day.push({x:Date.parse(arr2[i]),y:datapoints[i]});
          }
          var data = {
            labels: arr2,
            datasets: [{
              label: 'Patients Under Doctor',
              data: day,
              backgroundColor: "lightgreen",
              borderColor: "green",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'month'
                  }
                },
                y: {
                  beginAtZero: true,
                  ticks: {
                    precision: 0
                }
                }
              }
            }
          };
          const myChartp = new Chart(
            document.getElementById('myChartp'),
            config
          );

          function timeFramep(period){
            console.log(period)
            if(period=='day'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=day;
            }else if(period=='month'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=day;
            }else if(period=='year'){
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.data.datasets[0].data=day;
            }
            myChartp.update();
          }

          function filterDatap(){
            var dates2=[...arr2];
            const startdatep=document.getElementById('startdatep');
            const enddatep=document.getElementById('enddatep');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdatep.value;
                        });
           var indexenddate=dates2.findIndex(function(date) {        
                      if(date==enddatep.value){
                          return date;
                        }else if(date>enddatep.value){
                          return date;
                        }
                        });
                        if(indexenddate==-1){
                          indexenddate=dates2.length-1;
                        }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChartp.config.data.labels=filterDate;
            var datapoints2=[...datapoints]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate);
            myChartp.config.data.datasets[0].data=filterDatapoints;

            myChartp.update();
       
          }
              </script> 


<script> //for patient
  let dateDropdownp = document.getElementById('date-dropdownp'); 
       
  let currentYearp = new Date().getFullYear();    
  let earliestYearp = 2020;     
  while (currentYearp >= earliestYearp) {      
    let dateOption = document.createElement('option');          
    dateOption.text = currentYearp;      
    dateOption.value = currentYearp;        
    dateDropdownp.add(dateOption);      
    currentYearp -= 1;    
  } 
</script>


{{!-- <script myvar={{graphData}}>
              
          var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var temp = document.currentScript.getAttribute('myvar'); 
          var arr2=temp.split(","); // spliting from iso date to normal date
          var datapoints=[];
          var xAxis = ["January", "February", "March", "April", "May", "June", 
              "July","August", "September", "October","November", "December"]
         var dpp=new Array(12).fill(0);     
         var Yp=document.getElementById('date-dropdownp');
          var curr=1;
         for(var i=1;i<arr2.length;i++){ //counting occurance of each element
            if(arr2[i-1]===arr2[i]){
              ++curr;
            }else{
              datapoints.push(curr);
              curr=1;
            }
         }
         const countsp = {};
         for (const num of arr2) {
                countsp[num] = countsp[num] ? countsp[num] + 1 : 1;
              }

          datapoints.push(curr);
          arrp=unique(arr2);
          const dayp=[];
         
          var mpp=new Map();

          for(var i=0;i<arr2.length;i++){
                  let date=new Date(arr2[i]);
                  let month = date.getMonth();
                let year = date.getFullYear().toString();
                if(year==Yp.value){
                  dpp[month]++;
                }
              }
              
          for(var i=0;i<arr2.length;i++){
             
             mpp[arrp[i]]=mpo[arrp[i]] || [];
             mpp.set(arrp[i],datapoints[i]);
          }
          for(var i=0;i<12;i++){
          dayp.push({x:xAxis[i],y:dpp[i]});
        }
          var data = {
            labels: xAxis,
            datasets: [{
              label: 'Patients',
              data: dayp,
              backgroundColor: "lightgreen",
              borderColor: "green",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'category',
                  time:{
                    unit: 'month'
                  }
                },
                y: {
                  beginAtZero: true,
                   ticks: { 
                    precision: 0
                }
                }
              }
            }
          };
          const myChartp = new Chart(
            document.getElementById('myChartp'),
            config
          );

          function timeFramep(period){

            if(period=='day'){
              var startdate=document.getElementById('startdatep');
            var enddate=document.getElementById('enddatep');
            var temp = new Date(startdate.value)
            enddate = new Date(enddate.value)
            
              var labels = []
              while (temp <= enddate) {
                let day = temp.getDate();
                let month = temp.getMonth()+1;
                let year = temp.getFullYear();
                if(day<=9){
                 day= day.toString().padStart(2, '0');
                } if(month<=9){
                  month=month.toString().padStart(2,'0');
                }
                  labels.push(year + "-" + month + "-" + day)
                  temp = new Date(temp.getTime() + 24 * 60 * 60 * 1000)
              }

              var dayn=[];
            for(var i=0;i<labels.length;i++){
              if(mpp.has(labels[i])){
                dayn.push({x:Date.parse(labels[i]),y:countsp[labels[i]]}) 
              }else{
                dayn.push({x:Date.parse(labels[i]),y:0});
              }
              }
      
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.options.scales.x.type="category";
              myChartp.config.data.labels=labels; 
              myChartp.config.data.datasets[0].data=dayn;

            }else if(period=='month'){
              var selectYear=document.getElementById('date-dropdownp');
              
              var label = ["January", "February", "March", "April", "May", "June", 
              "July","August", "September", "October","November", "December"]
              
              var data=new Array(12).fill(0);

              for(var i=0;i<arr2.length;i++){
                  let date=new Date(arr2[i]);
                  let month=date.getMonth();
                let year = date.getFullYear().toString();
                if(year==selectYear.value){
                  data[month]++;
                }
              }
              var dayn=[];
              for(let i=0;i<12;i++){
                dayn.push({x:label[i],y:data[i]});
              }
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.options.scales.x.type="category";
              myChartp.config.data.labels=label; 
              myChartp.config.data.datasets[0].data=dayn;
             
            }else if(period=='year'){
              var startdate=document.getElementById('startdatep');
              var enddate=document.getElementById('enddatep');
              startdate = new Date(startdate.value)
              enddate = new Date(enddate.value)
              
              var syear=startdate.getFullYear();
              var eyear=enddate.getFullYear();

              var dif=eyear-syear+1;
              var data=new Array(dif).fill(0);

              var label = []
              for(var i=syear;i<=eyear;i++){
                label.push(i);
              }
              for(var i=0;i<arr2.length;i++){
                let date=new Date(arr2[i]);
                let temp=date.getFullYear();
                data[temp-syear]++;
              }
              var dayn=[];
              for(var i=0;i<label.length;i++){
                dayn.push({x:label[i],y:data[i]});
              }
              myChartp.config.options.scales.x.time.unit=period;
              myChartp.config.options.scales.x.type="category";
              myChartp.config.data.labels=label; 
              myChartp.config.data.datasets[0].data=dayn;
            }
            myChartp.update();
          }

         function filterDatap(){
            var dates2=[...arrp];
            const startdate=document.getElementById('startdatep');
            const enddate=document.getElementById('enddatep');
           var indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
          
          var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChartp.config.data.labels=filterDate;
            var datapoints2=[...datapoints]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChartp.config.data.datasets[0].data=filterDatapoints;

            myChartp.update();
       
          }
</script> --}}

              <br><br>



              <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
              <div class="card">
                <div class="card-body">
                  <p class="card-title mb-0"> Doctor Patients </p>
                  <div class="table-responsive">
                    <table class="table table-striped table-borderless">
                      <thead>
                       <tr>
										<th>Image/Name</th>
										{{!-- <th>Age</th> --}}
										<th>Doctor ID</th>
										<th>Patient Email</th>
										<th>Patient Phone</th>
										<th class="text-right">Patient Profile</th>
									</tr>
                      </thead>
                      	                {{#each userData}}


                                         
										<tbody>
											<tr>
												<td><img width="28" height="28" class="rounded-circle" src="img/user.jpg" alt=""> 
												{{this.patientFullName}}
												</td>
                        <td>{{this.DocId}}</td>
												<td>{{this.email}}</td>
												<td>{{this.phone}}</td>
												<!-- <td><button class="btn btn-primary btn-primary-one float-right">{{this.disabalityType}}</button></td> -->
                                                <form action="/patients-profile/{{this._id}}">
                                                    <td><button type="submit" class="btn btn-primary btn-primary-one float-right">Profile</button></td>
                                                    </form>
											</tr>
									
										</tbody>
                                         {{/each}}
                    </table>
                  </div>
                </div>
              </div>
            </div>
           
          </div>
        
        </div>
    </div>


{{>adminfooter}}