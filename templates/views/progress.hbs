{{>adminheader loginuser=loginuser}}

<style>
/* Popup container - can be anything you want */
.popup {
  position: relative;
  display: inline-block;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* The actual popup */
.popup .popuptext {
  visibility: hidden;
  width: 1000px;

  background-color: rgb(255, 255, 255);
  color: rgb(249, 174, 174);
  text-align: center;
  border-radius: 6px;

  z-index: 1;
  bottom: 100%;

}

/* Popup arrow */
.popup .popuptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

/* Toggle this class - hide and show the popup */
.popup .show {
  visibility: visible;
  -webkit-animation: fadeIn 1s;
  animation: fadeIn 1s;
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
  from {opacity: 0;} 
  to {opacity: 1;}
}

@keyframes fadeIn {
  from {opacity: 0;}
  to {opacity:1 ;}
}
</style>
    <link rel="stylesheet" type="text/css" href="../css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="../css/style.css">

{{>adminsidebaar loginuser=loginuser}}
        <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>


      <div class="page-wrapper">
             <div class="content">
                   <div class="row">
            <div class="col-md-6 grid-margin stretch-card">
              <div class="card tale-bg">
                <div class="card-people mt-auto">
                   <div class="card-body">
                  <p class="card-title">Patient OverAllGraph Graph</p>
                   <p class="font-weight-500">Overall Rating of Patient Progress</p>
                   <canvas id="myCharto" style="width:100%;max-width:100%"></canvas>
                                   <button onClick="timeFrameo('day')" >Day</button>
                                   <button onclick="timeFrameo('month')">Month</button>
                                   <button onclick="timeFrameo('year')" >Year</button>
                                   <input onchange="filterDatao()" type="date" id="startdateo" value="">
                                   <input onchange="filterDatao()" type="date" id="enddateo" value="">   
                </div>
                  <div class="weather-info">
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-6 grid-margin transparent">
              <div class="row">
                <div class="col-md-12 mb-4 stretch-card transparent">
                  <div class="card card-tale">
                    <a class="nav-link" href="#">
                    <div class="card-body">
                      <p class="mb-4" style="color: white;">Patients Play Games</p>
                      <p class="fs-30 mb-2" style="color: white;">{{graphDataPatient.length}}</p>
                      <p style="color: white;">30 days</p>
                    </div>
                    </a>
                  </div>
                </div>
                </div>
                 
                <div class="row">
              
                <div class="col-md-12 stretch-card transparent">
                  <div class="card card-light-danger">
                     <a class="nav-link" href="#">
                    <div class="card-body">
                      <p class="mb-4" style="color: white;">Number of Games</p>
                      <p class="fs-30 mb-2" style="color: white;">{{datagame.length}}</p>
                      <p style="color: white;">30 days</p>
                    </div>
                    </a>
                  </div>
                </div>
             
            </div>
          </div>

        <div class="row">
					<div class="col-12 col-md-4 col-lg-4col-xl-4">
						<div class="card">
							<div class="card-body">
								<div class="chart-title">
									<h4>Loudness Graph</h4>
								
								</div>	
								   <canvas id="myChartl" style="width:100%;max-width:600px"></canvas>
                                   <button onClick="timeFramel('day')" >Day</button>
                                   <button onclick="timeFramel('month')">Month</button>
                                   <button onclick="timeFramel('year')" >Year</button>
                                   <input onchange="filterDatal()" type="date" id="startdatel" value="">
                                   <input onchange="filterDatal()" type="date" id="enddatel" value=""> 
							</div>
             
						</div>
					</div>

					<div class="col-12 col-md-4 col-lg-4col-xl-4">
						<div class="card">
							<div class="card-body">
								<div class="chart-title">
									<h4>Hz Graph</h4>
								</div>
								 <canvas id="myCharth" style="width:100%;max-width:600px"></canvas>
                                 <button onClick="timeFrameh('day')" >Day</button>
                                 <button onclick="timeFrameh('month')">Month</button>
                                 <button onclick="timeFrameh('year')" >Year</button>
                                 <input onchange="filterDatah()" type="date" id="startdateh" value="">
                                 <input onchange="filterDatah()" type="date" id="enddateh" value=""> 
							</div>
						</div>
					</div>

                    <div class="col-12 col-md-4 col-lg-4col-xl-4">
						<div class="card">
							<div class="card-body">
								<div class="chart-title">
									<h4>Recognition Graph</h4>
								</div>
								 <canvas id="myChartr" style="width:100%;max-width:600px"></canvas>
                                 <button onClick="timeFramer('day')" >Day</button>
                                   <button onclick="timeFramer('month')">Month</button>
                                   <button onclick="timeFramer('year')" >Year</button>
                                   <input onchange="filterDatar()" type="date" id="startdater" value="">
                                   <input onchange="filterDatar()" type="date" id="enddater" value=""> 
							</div>
						</div>
					</div>
				</div>

        {{!-- Overall graph --}}

            <script myvar={{graphDataPatient}} myvarl={{loudness}} myvarp={{pitch}} myvarr={{overrall}} >
               var unique = (a,t={}) => a.filter(e=>!(t[e]=e in t)); // function to find unique dates
          var temp = document.currentScript.getAttribute('myvar'); 
          var temp2 = document.currentScript.getAttribute('myvarl'); 
          var temp3 = document.currentScript.getAttribute('myvarp');
          var temp4 = document.currentScript.getAttribute('myvarr');
        
          var arro=temp.split(","); // spliting from iso date to normal date
          var arrl=temp2.split(",");
          var arrp=temp3.split(",");
          var arrr=temp4.split(",");
          
         var datapointso=[];
         arro=unique(arro);
         for(var i=0;i<arro.length;i++){ //counting occurance of each element
            var sum=parseFloat(arrl[i])+parseFloat(arrr[i])+parseFloat(arrp[i]); 
            datapointso.push(parseFloat(sum/3));
            }
            // console.log(datapoints)
         
          const dayo=[];
          for(var i=0;i<arro.length;i++){
             dayo.push({x:Date.parse(arro[i]),y:datapointso[i]});
          } 
          var data = {
            labels: arro,
            datasets: [{
              label: 'Over All Graph',
              data: dayo,
              backgroundColor: "orange",
              borderColor: "red",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'day'
                  }
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          };
          const myCharto = new Chart(
            document.getElementById('myCharto'),
            config
          );

          function timeFrameo(period){
            console.log(period)
            if(period=='day'){
              myCharto.config.options.scales.x.time.unit=period;
              myCharto.config.data.datasets[0].data=dayo;
            }else if(period=='month'){
              myCharto.config.options.scales.x.time.unit=period;
              myCharto.config.data.datasets[0].data=dayo;
            }else if(period=='year'){
              myCharto.config.options.scales.x.time.unit=period;
              myCharto.config.data.datasets[0].data=dayo;
            }
            myCharto.update();
          }

          function filterDatao(){
            var dates2=[...arro];
            const startdate=document.getElementById('startdateo');
            const enddate=document.getElementById('enddateo');
           var indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
            var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myCharto.config.data.labels=filterDate;
            var datapoints2=[...datapointso]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myCharto.config.data.datasets[0].data=filterDatapoints;

            myCharto.update();
       
          }
        </script>

        {{!-- Loudness --}}

        <script myvar={{datel}} myvars={{loudness}}>
          var temp2 = document.currentScript.getAttribute('myvars'); 
          var tempXl=document.currentScript.getAttribute('myvar');
          var arrY=temp2.split(",");
          var arrXl=tempXl.split(",");
          var datapointsl=[];
        
         for(var i=0;i<arrY.length;i++){ //counting occurance of each element
              datapointsl.push(parseFloat(arrY[i]));
            }
          var dayl=[];
          for(var i=0;i<arrXl.length;i++){
             dayl.push({x:Date.parse(arrXl[i]),y:datapointsl[i]});
          }
          console.log(dayl)
          var data = {
            labels: arrXl,
            datasets: [{
              label: 'Loudness',
              data: dayl,
              backgroundColor: "green",
              borderColor: "lightgreen",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'day'
                  }
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          };
          const myChartl = new Chart(
            document.getElementById('myChartl'),
            config
          );

          function timeFramel(period){
            if(period=='day'){
              myChartl.config.options.scales.x.time.unit=period;
              myChartl.config.data.datasets[0].data=dayl;
            }else if(period=='month'){
              myChartl.config.options.scales.x.time.unit=period;
              myChartl.config.data.datasets[0].data=dayl;
            }else if(period=='year'){
              myChartl.config.options.scales.x.time.unit=period;
              myChartl.config.data.datasets[0].data=dayl;
            }
            myChartl.update();
          }

          function filterDatal(){
            var dates2=[...arro];
            const startdate=document.getElementById('startdatel');
            const enddate=document.getElementById('enddatel');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
            var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChartl.config.data.labels=filterDate;
            var datapoints2=[...datapointsl]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChartl.config.data.datasets[0].data=filterDatapoints;

            myChartl.update();
       
          }

             </script>

             {{!-- pitch --}}


        <script myvar={{datep}} myvars={{pitch}}>
          var templ = document.currentScript.getAttribute('myvars'); 
          var tempXp=document.currentScript.getAttribute('myvar');
          var arrXp=tempXp.split(",");
          var arrYp=templ.split(",");
         var datapointsp=[];
        
         for(var i=0;i<arrYp.length;i++){ //counting occurance of each element
              datapointsp.push(parseFloat(arrYp[i]));
            }
          var dayp=[];
          for(var i=0;i<arro.length;i++){
             dayp.push({x:Date.parse(arrXp[i]),y:datapointsp[i]});
          }
          var data = {
            labels: arrXp,
            datasets: [{
              label: 'Pitch',
              data: dayp,
              backgroundColor: "skyblue",
              borderColor: "blue",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'day'
                  }
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          };
          const myCharth = new Chart(
            document.getElementById('myCharth'),
            config
          );

          function timeFrameh(period){
            if(period=='day'){
              myCharth.config.options.scales.x.time.unit=period;
              myCharth.config.data.datasets[0].data=dayp;
            }else if(period=='month'){
              myCharth.config.options.scales.x.time.unit=period;
              myCharth.config.data.datasets[0].data=dayp;
            }else if(period=='year'){
              myCharth.config.options.scales.x.time.unit=period;
              myCharth.config.data.datasets[0].data=dayp;
            }
            myCharth.update();
          }

          function filterDatah(){
            var dates2=[...arro];
            const startdate=document.getElementById('startdateh');
            const enddate=document.getElementById('enddateh');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
                        var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myCharth.config.data.labels=filterDate;
            var datapoints2=[...datapointsp]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myCharth.config.data.datasets[0].data=filterDatapoints;

            myCharth.update();
       
          }

        </script>

        {{!-- Recognition --}}

        <script myvar={{graphDataPatient}} myvars={{overrall}}>
          var tempr = document.currentScript.getAttribute('myvars'); 
          var temprr=document.currentScript.getAttribute('myvar');
          var arrYr=tempr.split(",");
          var arrr=temprr.split(",");
         var datapointsr=[];
        
         for(var i=0;i<arro.length;i++){ //counting occurance of each element
              datapointsr.push(parseFloat(arrYr[i]));
            }
          var dayr=[];
          for(var i=0;i<arro.length;i++){
             dayr.push({x:Date.parse(arrr[i]),y:datapointsr[i]});
          }
          var data = {
            labels: arrr,
            datasets: [{
              label: 'Recognition',
              data: dayr,
              backgroundColor: "yellow",
              borderColor: "orange",
              borderWidth: 3
            }]
          };
          var config = {
            type: 'line',
            data,
            options: {
              scales: {
                x:{
                  type: 'time',
                  time:{
                    unit: 'day'
                  }
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          };
          const myChartr = new Chart(
            document.getElementById('myChartr'),
            config
          );

          function timeFramer(period){
            if(period=='day'){
              myChartr.config.options.scales.x.time.unit=period;
              myChartr.config.data.datasets[0].data=dayr;
            }else if(period=='month'){
              myChartr.config.options.scales.x.time.unit=period;
              myChartr.config.data.datasets[0].data=dayr;
            }else if(period=='year'){
              myChartr.config.options.scales.x.time.unit=period;
              myChartr.config.data.datasets[0].data=dayr;
            }
            myChartr.update();
          }

          function filterDatar(){
            var dates2=[...arro];
            const startdate=document.getElementById('startdater');
            const enddate=document.getElementById('enddater');
           const indexstartdate=dates2.findIndex(function(date) {
                            return date >=startdate.value;
                        });
                        var indexenddate;
          for(var i=0;i<dates2.length;i++){
            if(dates2[i]<=enddate.value){
              indexenddate=i;
            }
          }
           const filterDate= dates2.slice(indexstartdate,indexenddate+1);
            myChartr.config.data.labels=filterDate;
            var datapoints2=[...datapointsr]
            const filterDatapoints=datapoints2.slice(indexstartdate,indexenddate+1);
            myChartr.config.data.datasets[0].data=filterDatapoints;

            myChartr.update();
       
          }
        </script>


        

       


             <div class="col-12" style="max-height: 500px;">
                        <div class="card member-panel" style="height: 500px;">
							<div class="card-header bg-white">
								<center><h4 class="card-title mb-0">Patient Pragress Details</h4></center>
							</div>
                            <div class="card-body">
                                <ul class="contact-list">
                                  {{#each progress}}
                                    <li>
                                        <div class="contact-cont">
                                            <div class="float-left user-img m-r-10">
                                                <a href="#" title="John Doe"><img src="{{this.image}}" alt="" class="w-40 rounded-circle"></a>
                                            </div>
                                            <div class="contact-info">
                                               <span class="contact-name text-ellipsis">{{this.patientId}} </span>
                                                <span class="contact-date">{{this.date}} </span>


                                                <script>
                                          function myFunction() {
                                     var popup = document.getElementById("myPopup");
                                   popup.classList.toggle("show");
                                             }
                                         </script>

                                           <div class="popup" onclick="myFunction()">Show all details
                                                  
                                                  
                                                <div class="popuptext" id="myPopup" class="row">
                    <div class="col-md-12"  style="max-height: 500px;">
                        <div class="card-box">
                            {{!-- <h3 class="card-title">Progress Details</h3> --}}
                            
                            <div class="experience-box">
                                <ul class="experience-list">
                                    <li>
                                        <div class="experience-user">
                                            <div class="before-circle"></div>
                                        </div>
                                        <div class="experience-content">
                                            <div class="timeline-content">
                                                <a href="#/" class="name">Gamebase</a>
                                                <div>{{this.gamebase}}</div>
                                            </div>

                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">Overralrating</a>
                                                <div>{{this.overralrating}}</div>
                                            </div>

                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">LoudnessTarget</a>
                                                <div>{{this.LoudnessTarget}}</div>
                                            </div>

                                             <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">NumberOfTrials</a>
                                                <div>{{this.NumberOfTrials}}</div>
                                            </div>
                                            

                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">cumulativeDurationOfSounds</a>
                                                <div>{{this.cumulativeDurationOfSounds}}</div>
                                            </div>
 

                                            
                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">MeanPitch</a>
                                                <div>{{this.MeanPitch}}</div>
                                            </div>


                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">meanLoudness</a>
                                                <div>{{this.meanLoudness}}</div>
                                            </div>


                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">stdDevPitch</a>
                                                <div>{{this.stdDevPitch}}</div>
                                              
                                            </div>

                                             <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">stdDevLoudness</a>
                                                <div>{{this.stdDevLoudness}}</div>
                                              
                                            </div>

                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">rangepitchMin</a>
                                                <div>{{this.rangepitchMin}}</div>
                                              
                                            </div>


                                             <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">rangepitchMax</a>
                                                <div>{{this.rangepitchMax}}</div>
                                              
                                            </div>


                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">rangeLoudnessMin</a>
                                                <div>{{this.rangeLoudnessMin}}</div>
                                            </div>


                                            <hr style="color:black">

                                            <div class="timeline-content">
                                                <a href="#/" class="name">rangeLoudnessmax</a>
                                                <div>{{this.rangeLoudnessmax}}</div>
                                              
                                            </div>
                                            
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        
                    </div>
                </div>
                                              
                                                 </div>
                                              
                                            </div>
                                        </div>
                                    </li>
                                    {{/each}}
                                   
                                </ul>
                            </div>
                         
                        </div>
                    </div>
				</div>
			
                
            </div>
        
        </div>
    </div>
{{>adminfooter}}

  <script src="../js/app.js"></script>